generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ResourceType {
  USER
  ROLE
  PERMISSION
  CATEGORY
  ARTICLE
}

enum CategoryType {
  ARTICLE
  PRODUCT
  INDUSTRY
}

enum PartnerType {
  MANUFACTURER
  SUPPLIER
}

enum ActionType {
  READ
  WRITE
  DELETE
  UPDATE
  ALL
}

enum ScopeType {
  SELF
  GLOBAL
}

enum UserActiveStatus {
  INACTIVE
  ACTIVE
  BANNED
  FRAUD
  NOT_VERIFIED
}

enum PermissionType {
  GLOBAL
  PARTNER
  CUSTOMER
}

enum ContentType {
  MD
  MDX
  HTML
}

enum AssetType {
  IMAGE
  VIDEO
  AUDIO
  DOCUMENT
}

model SystemSettings {
  id String @id @default(uuid())

  site_on          Boolean @default(false)
  default_language String  @default("en")
  timezone         String  @default("UTC")
  site_name        String  @default("yag_ve_yag")
  contact_email    String?

  allow_registration Boolean @default(true)
  maintenance_mode   Boolean @default(false)

  default_meta_title       String?
  default_meta_description String?
  default_meta_keywords    String[]

  smtp_host     String?
  smtp_port     Int?
  smtp_username String?
  smtp_password String?

  max_file_upload_size Int      @default(10485760) // 10 MB
  allowed_file_types   String[] @default(["jpg", "png", "pdf"])

  max_login_attempts  Int @default(5)
  password_min_length Int @default(8)

  google_analytics_key String?
  stripe_api_key       String?

  facebook_url String?
  twitter_url  String?
  linkedin_url String?

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
}

model Asset {
  id            String    @id @default(uuid())
  original_name String
  name          String
  type          AssetType
  mime_type     String
  file_size     Int
  source        String
  preview       String?

  width       Int?  @default(0)
  height      Int?  @default(0)
  focal_point Json?

  channels Channel[] @relation("ChannelAssets")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  updated_by String?
  created_by String?
  deleted_at DateTime?
  deleted_by String?
}

model User {
  id                String  @id @default(uuid())
  role_id           String
  oauth_provider_id String?

  email                    String  @unique
  password_hash            String
  email_verification_token String?
  reset_password_token     String?
  oauth_provider           String?
  two_factor_secret        String?

  permissions String[]

  two_factor_enabled Boolean @default(false)
  email_verified     Boolean @default(false)

  is_active UserActiveStatus @default(INACTIVE)

  role          Role           @relation(fields: [role_id], references: [id])
  administrator Administrator?

  reset_password_expires DateTime?
  last_login             DateTime?
  created_at             DateTime? @default(now())
  updated_at             DateTime? @updatedAt
  updated_by             String?
  created_by             String?
  deleted_at             DateTime?
  deleted_by             String?

  @@index([email])
  @@index([role_id])
}

model Administrator {
  id      String @id @default(uuid())
  user_id String @unique

  email String @unique

  user User @relation(fields: [user_id], references: [id])

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  created_by String?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?
}

model Role {
  id String @id @default(uuid())

  name String @unique

  users            User[]
  role_permissions RolePermission[]
  channels         Channel[]        @relation("ChannelRoles")

  created_at DateTime? @default(now())
  created_by String?
  updated_at DateTime? @updatedAt
  updated_by String?
  deleted_at DateTime?
  deleted_by String?
}

model Permission {
  id                String  @id @default(uuid())
  specific_scope_id String?

  resource        ResourceType
  action          ActionType
  scope           ScopeType
  permission_type PermissionType @default(value: GLOBAL)

  role_permissions RolePermission[]
  channels         Channel[]        @relation("ChannelPermissions")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  created_by String?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?

  @@unique([action, resource, scope])
}

model RolePermission {
  id            String @id @default(uuid())
  role_id       String
  permission_id String

  is_active Boolean @default(true)

  role       Role       @relation(fields: [role_id], references: [id], onDelete: Cascade)
  permission Permission @relation(fields: [permission_id], references: [id], onDelete: Cascade)
  channels   Channel[]  @relation("ChannelRolePermission")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  created_by String?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?

  @@unique([role_id, permission_id])
}

model Partner {
  id         String @id @default(uuid())
  channel_id String

  name         String
  email        String?
  phone_number String?
  address      String?
  partner_type PartnerType
  website      String?

  channel Channel @relation(fields: [channel_id], references: [id])

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  created_by String?
  updated_by String?
  deleted_at DateTime?
  deleted_by String?

  @@index([partner_type])
}

model Category {
  id                 String  @id @default(uuid())
  parent_category_id String?
  seo_metadata_id    String?

  name          String
  content       String
  content_type  ContentType
  category_type CategoryType

  parent_category Category?    @relation(fields: [parent_category_id], references: [id], name: "category_tree")
  sub_categories  Category[]   @relation(name: "category_tree")
  seo_metadata    SeoMetadata? @relation(fields: [seo_metadata_id], references: [id])
  channels        Channel[]    @relation("ChannelCategories")

  created_at DateTime? @default(now())
  created_by String?
  updated_at DateTime? @updatedAt
  updated_by String?
  deleted_at DateTime?
  deleted_by String?

  @@unique([name, category_type])
  @@index([seo_metadata_id])
}

model Article {
  id              String  @id @default(uuid())
  seo_metadata_id String?

  title        String
  content      String
  content_type ContentType

  seo_metadata SeoMetadata? @relation(fields: [seo_metadata_id], references: [id])
  channels     Channel[]    @relation("ChannelArticles")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@index([seo_metadata_id])
}

model SeoMetadata {
  id String @id @default(uuid())

  title       String
  description String
  keywords    String
  version     Int    @default(1)

  canonical_url  String?
  og_title       String?
  og_description String?
  og_image       String?
  robots         String?
  schema_markup  Json?
  hreflang       String?
  page_type      String?

  categories Category[]
  blog_posts Article[]
  channels   Channel[]  @relation("ChannelMetaFields")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@map("MetaField")
}

model Lang {
  id String @id @default(uuid())

  name      String @unique
  code      String @unique
  direction String @default("ltr")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
}

model Facet {
  id String @id @default(uuid())

  name        String
  data_type   String
  constraints Json?

  values   FacetValue[]
  channels Channel[]    @relation("ChannelFacets")

  created_at DateTime? @default(now())
  created_by String?
  updated_at DateTime? @updatedAt
  updated_by String?
  deleted_at DateTime?
  deleted_by String?
}

model FacetValue {
  id       String @id @default(uuid())
  facet_id String

  value String

  facet    Facet     @relation(fields: [facet_id], references: [id])
  channels Channel[] @relation("ChannelFacets")

  created_at DateTime? @default(now())
  created_by String?
  updated_at DateTime? @updatedAt
  updated_by String?
  deleted_at DateTime?
  deleted_by String?

  @@unique([facet_id, value])
}

model Channel {
  id String @id @default(uuid())

  code                  String  @unique
  name                  String
  default_language_code String
  currency_code         String
  is_default            Boolean @default(false)

  partners         Partner[]
  roles            Role[]           @relation("ChannelRoles")
  permissions      Permission[]     @relation("ChannelPermissions")
  role_permissions RolePermission[] @relation("ChannelRolePermission")
  categories       Category[]       @relation("ChannelCategories")
  articles         Article[]        @relation("ChannelArticles")
  meta_fields      SeoMetadata[]    @relation("ChannelMetaFields")
  facets           Facet[]          @relation("ChannelFacets")
  facet_values     FacetValue[]     @relation("ChannelFacets")
  assets           Asset[]          @relation("ChannelAssets")

  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  deleted_at DateTime?
  created_by String?
  updated_by String?
  deleted_by String?
}
